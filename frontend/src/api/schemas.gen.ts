// This file is auto-generated by @hey-api/openapi-ts

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: "#/components/schemas/ValidationError",
      },
      type: "array",
      title: "Detail",
    },
  },
  type: "object",
  title: "HTTPValidationError",
} as const;

export const TodoCreateSchemaSchema = {
  properties: {
    title: {
      type: "string",
      maxLength: 255,
      minLength: 4,
      title: "Title",
    },
    description: {
      type: "string",
      title: "Description",
      default: "",
    },
    isCompleted: {
      type: "boolean",
      title: "Iscompleted",
      default: false,
    },
    dueDate: {
      anyOf: [
        {
          type: "string",
          format: "date",
        },
        {
          type: "null",
        },
      ],
      title: "Duedate",
    },
  },
  type: "object",
  required: ["title", "dueDate"],
  title: "TodoCreateSchema",
} as const;

export const TodoSchemaSchema = {
  properties: {
    title: {
      type: "string",
      maxLength: 255,
      minLength: 4,
      title: "Title",
    },
    description: {
      type: "string",
      title: "Description",
    },
    isCompleted: {
      type: "boolean",
      title: "Iscompleted",
    },
    dueDate: {
      anyOf: [
        {
          type: "string",
          format: "date",
        },
        {
          type: "null",
        },
      ],
      title: "Duedate",
    },
    id: {
      type: "integer",
      title: "Id",
    },
  },
  type: "object",
  required: ["title", "description", "isCompleted", "dueDate", "id"],
  title: "TodoSchema",
} as const;

export const TodoUpdateSchemaSchema = {
  properties: {
    title: {
      anyOf: [
        {
          type: "string",
          maxLength: 255,
          minLength: 4,
        },
        {
          type: "null",
        },
      ],
      title: "Title",
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Description",
    },
    is_completed: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
      title: "Is Completed",
    },
    due_date: {
      anyOf: [
        {
          type: "string",
          format: "date",
        },
        {
          type: "null",
        },
      ],
      title: "Due Date",
    },
  },
  type: "object",
  title: "TodoUpdateSchema",
} as const;

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: "string",
          },
          {
            type: "integer",
          },
        ],
      },
      type: "array",
      title: "Location",
    },
    msg: {
      type: "string",
      title: "Message",
    },
    type: {
      type: "string",
      title: "Error Type",
    },
  },
  type: "object",
  required: ["loc", "msg", "type"],
  title: "ValidationError",
} as const;
